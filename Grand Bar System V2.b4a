Build1=Default,com.sigilabs.GBSv2
Build2=GBSv2,com.sigilabs.GBSv2
File1=btn_table_1.png
File2=btn_table_2.png
File3=btn_table_3.png
File4=btn_table_4.png
File5=btn_table_5.png
File6=buttons_png33.png
File7=buttons_png44.png
File8=choose_btn.png
File9=frm_login.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=dialogs
Library3=http
Library4=httputils2
Library5=json
Library6=phone
Library7=reflection
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
Module2=extra
Module3=waitress_ktv
NumberOfFiles=9
NumberOfLibraries=7
NumberOfModules=3
Version=8.3
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Grand Bar System V2
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
	#BridgeLogger: True
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim strUsername As String
	Dim place,dari As String
	
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.

	Private txtUsername As EditText
	Private txtPassword As EditText
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	'Activity.LoadLayout("Layout1")
	Activity.LoadLayout("frm_login")
	TestConnection
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub


Sub btnLogin_Click
	strUsername = txtUsername.Text.Trim	
	Dim strPassword As String = txtPassword.Text.Trim
	If strUsername="" Then
		Msgbox("Please Enter Username!","Error!")
		Return
	End If
	If strPassword="" Then
		Msgbox("Please Enter Password!","Error!")
		Return
	End If
	
	Dim Login As HttpJob
	Login.Initialize("Login",Me)
	Login.Download2(extra.strhost & "signin.php", Array As String("user_name", strUsername, "password", strPassword))
	ProgressDialogShow("Menghubungkan ...")
End Sub

Sub TestConnection
	Dim connect As HttpJob
	connect.Initialize("Connect",Me)
	connect.Download(extra.strhost & "connect.php")
	ProgressDialogShow("Menghubungkan ...")
End Sub

Sub JobDone(job As HttpJob)
	ProgressDialogHide
	If job.Success = True Then
		Dim ret,act As String
		ret= job.GetString
		Dim parser As JSONParser
		parser.Initialize(ret)
		If job.JobName="Connect" Then
			act = parser.NextValue
			If act = "Connected" Then
				ToastMessageShow("Connection Success", False)
			Else
				ToastMessageShow("Connection Failed, Server not found", False)
			End If
		Else If job.JobName = "Login" Then
			Try
				Dim level As String
				Dim root As List =parser.NextArray
				For Each colroot As Map In root
					extra.id_karyawan = colroot.Get("id_karyawan")
					level = colroot.Get("level")
				Next
				get_level(level)
				Activity.Finish
			Catch
				Log(LastException)
				ToastMessageShow("Login failed!",False)
				txtUsername.Text=""
				txtPassword.Text=""
			End Try
		End If
	Else
		ToastMessageShow("Connection failed, Server not found!",False)
	End If
	job.Release
End Sub

Sub get_level(level As String)
	If level = "Waitress hall" Then
		place="hall"
		dari="waitress"
		'StartActivity(waitress_hall)
	Else If level = "Bar Hall" Then
		place="hall"
		'StartActivity(bar_hall)
	else If level = "Waitress KTV" Then
		place="ktv"
		dari="waitress"
		'StartActivity(waitress_ktv)
	Else If level = "Bar KTV" Then
		place="ktv"
		'StartActivity(bar_ktv)
	End If
	
End Sub